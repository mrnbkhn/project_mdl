{"version":3,"file":"editform.min.js","sources":["../src/editform.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Defines the behavior of the editing form for a vplquestion.\n * @copyright  Astor Bizard, 2019\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* globals ace */\ndefine([\n    'jquery',\n    'core/log',\n    'qtype_vplquestion/vplservice',\n    'qtype_vplquestion/codeeditors',\n    'qtype_vplquestion/scriptsloader',\n    ], function($, log, VPLService, CodeEditors, ScriptsLoader) {\n\n    var execfilesEditor = null;\n    var precheckExecfilesEditor = null;\n    var programaticChangeEditor = null;\n\n    /**\n     * Set editor content to a new content.\n     * @param {Editor} aceEditor Ace editor object to reset.\n     * @param {String} newContent The new content to put in the editor.\n     * @param {Boolean} clearUndoHistory Whether to clear the undo history (hard reset).\n     */\n    function updateEditorContent(aceEditor, newContent, clearUndoHistory) {\n        programaticChangeEditor = aceEditor;\n        aceEditor.getSession().getDocument().setValue(newContent); // Call setValue on Document directly to bypass undo reset.\n        programaticChangeEditor = null;\n        if (clearUndoHistory) {\n            aceEditor.getSession().setUndoManager(new ace.UndoManager());\n        }\n    }\n\n    /**\n     * Update display of execution files editors.\n     * This does not include file tabs nor content updating. This is only a visibility update on some elements.\n     */\n    function updateExecfilesVisibility() {\n        var selectedVpl = $('#id_templatevpl').val() > '';\n        $('[data-role=\"novplmessage\"]').toggle(!selectedVpl);\n        $(`#execfileslist,\n           #fitem_id_execfile,\n           #fitem_id_execfileslist [data-role=\"scrollerarrow\"],\n           #fitem_id_execfileslist [data-role=\"filemanagement\"]`).toggle(selectedVpl);\n\n        var showPrecheckSection = $('#id_precheckpreference').val() == 'diff';\n        var showPrecheckEditor = selectedVpl && showPrecheckSection;\n        $('#fitem_id_precheckexecfileslist').toggle(showPrecheckSection);\n        $(`#precheckexecfileslist,\n           #fitem_id_precheckexecfile,\n           #fitem_id_precheckexecfileslist [data-role=\"scrollerarrow\"],\n           #fitem_id_precheckexecfileslist [data-role=\"filemanagement\"]`).toggle(showPrecheckEditor);\n\n        // Refresh previously hidden editor (which otherwise does not display correctly).\n        if ($('#ace_placeholder_precheckexecfile').length) {\n            ace.edit('ace_placeholder_precheckexecfile').resize();\n        }\n\n        $('[data-role=\"filesloadicon\"]').hide();\n    }\n\n    /**\n     * Apply the current VPL template choice to form elements that depends on it (template content, execution files, ...).\n     * @param {Boolean} keepContents Whether editors contents should be kept.\n     *  This is typically false on initialization, true otherwise.\n     */\n    function applyTemplateChoice(keepContents) {\n        var selectedVpl = $('#id_templatevpl').val();\n        $('#fitem_id_templatecontext').toggle(selectedVpl > '');\n        updateExecfilesVisibility();\n        if (selectedVpl) {\n            // Update template content.\n            VPLService.call('info', 'reqfile', selectedVpl)\n            .then(function(reqfile) {\n                // Check that a required file is present. If not, display a warning.\n                $('[data-role=\"no-reqfile-warning\"]').toggle(!reqfile);\n                reqfile = reqfile || {name: 'ERROR.txt', contents: ''}; // Fill reqfile with default value if needed.\n\n                var lang = VPLService.langOfFile(reqfile.name);\n                // Apply language change on editors.\n                $('[data-role=\"code-editor\"]:not([data-manylangs])~.ace-placeholder').each(function() {\n                    ace.edit(this).getSession().setMode('ace/mode/' + lang);\n                });\n\n                // Store lang in hidden form element.\n                $('[name=templatelang]').val(lang);\n\n                if (!keepContents) {\n                    // Choice changed (it is not initialization):\n                    // Reinitialize template content to its original (VPL) state.\n                    updateEditorContent(ace.edit('ace_placeholder_templatecontext'), reqfile.contents, true);\n                }\n                return reqfile;\n            })\n            .fail(function(message) { // The .catch method doesn't exist as it is a $.Deferred object (and not Promise).\n                log.error(message, 'Error retrieving required files info for VPL ' + selectedVpl);\n            });\n\n            // Update execution files.\n            VPLService.call('info', 'execfiles', selectedVpl)\n            .then(function(execfiles) {\n                // Check that pre_vpl_run.sh is present. If not, display a warning.\n                $('[data-role=\"no-pre_vpl_run-warning\"]').toggle(!execfiles.find((execfile) => execfile.name == 'pre_vpl_run.sh'));\n                // Filter new exec files to exclude standard scripts.\n                var standardScripts = ['vpl_run.sh', 'vpl_debug.sh', 'vpl_evaluate.sh', 'pre_vpl_run.sh'];\n                execfiles = execfiles.filter((execfile) => !standardScripts.includes(execfile.name));\n\n                updateNewExecfiles(execfiles, keepContents, '#execfileslist', execfilesEditor, $('[name=execfiles]'));\n                updateNewExecfiles(execfiles, keepContents, '#precheckexecfileslist', precheckExecfilesEditor,\n                        $('[name=precheckexecfiles]'));\n                return execfiles;\n            })\n            .fail(function(message) { // The .catch method doesn't exist as it is a $.Deferred object (and not Promise).\n                log.error(message, 'Error retrieving execution files info for VPL ' + selectedVpl);\n            });\n        }\n    }\n\n    /**\n     * Generate HTML for a status chip (overwrite or inherit from VPL).\n     * @param {String} status Typically either 'overwrite' or 'inherit'\n     * @returns {String} HTML fragment.\n     */\n    function getStatusChipHTML(status) {\n        return '<span class=\"d-inline-block ml-1 status-chip status-chip-' + status + '\" data-status-chip=\"' + status + '\"></span>';\n    }\n\n    /**\n     * Setup one editor for execution files (with file tabs). Call this once on loading, then use updateNewExecfiles when changing.\n     * @param {String} fileTabs Tabs selector for execution files.\n     * @param {Editor} aceEditor Ace editor object.\n     * @param {jQuery} $hiddenField Hidden form field in which files data is stored.\n     */\n    function setupExecfilesEditor(fileTabs, aceEditor, $hiddenField) {\n        var $fileTabs = $(fileTabs);\n        $fileTabs.parent().find('[data-role=\"scrollerarrow\"]')\n        .click(function() {\n            if ($(this).data('direction') === 'left') {\n                $fileTabs[0].scrollLeft = Math.max($fileTabs[0].scrollLeft - 42, 0);\n            } else {\n                $fileTabs[0].scrollLeft = Math.min($fileTabs[0].scrollLeft + 42, $fileTabs[0].scrollLeftMax);\n            }\n        });\n\n        // On form submit, write current editor value to the field that will be saved.\n        $('input[type=submit]').click(function() {\n            var $fileTab = $(fileTabs + ' .currentfile');\n            var status = $fileTab.find('[data-status-chip]').data('status-chip');\n            storeExecfile($fileTab.text(), status == 'overwrite' ? aceEditor.getValue() : null, $hiddenField);\n        });\n\n        $fileTabs.siblings('[data-role=\"filemanagement\"]').find('input:radio')\n        .each(function() {\n            // Add status chip to radio button for readability.\n            $(this).closest('label').append(getStatusChipHTML($(this).val()));\n        })\n        .click(function() {\n            // Update status chip on current file.\n            var newStatus = $(this).val();\n            $fileTabs.find('.currentfile [data-status-chip]').replaceWith(getStatusChipHTML(newStatus));\n        });\n\n        var switchBackToDefaultFileMessage = M.util.get_string('switchbacktodefaultfileprompt', 'qtype_vplquestion');\n        var $switchBackToDefaultFileDialog = $('<div class=\"py-3\">' + switchBackToDefaultFileMessage + '</div>').dialog({\n            autoOpen: false,\n            dialogClass: 'editformdialog p-3 bg-white',\n            title: M.util.get_string('switchbacktodefaultfile', 'qtype_vplquestion'),\n            closeOnEscape: false,\n            modal: true,\n            buttons:\n            [{\n                text: M.util.get_string('confirm', 'moodle'),\n                'class': 'btn btn-primary mx-1',\n                click: function() {\n                    updateEditorContent(aceEditor, $hiddenField.data('default_' + $fileTabs.find('.currentfile').text()), false);\n                    $(this).dialog('close');\n                }\n            },\n            {\n                text: M.util.get_string('cancel', 'moodle'),\n                'class': 'btn btn-secondary mx-1',\n                click: function() {\n                    $fileTabs.siblings('[data-role=\"filemanagement\"]').find('input:radio[value=\"overwrite\"]').click();\n                    $(this).dialog('close');\n                }\n            }],\n            open: function() {\n                $('.editformdialog').focus();\n            }\n        });\n        $fileTabs.siblings('[data-role=\"filemanagement\"]').find('input:radio[value=\"inherit\"]')\n        .click(function() {\n            if ($hiddenField.data('default_' + $fileTabs.find('.currentfile').text()).trim() !== aceEditor.getValue().trim()) {\n                $switchBackToDefaultFileDialog.dialog('open');\n            }\n        });\n    }\n\n    /**\n     * Update execution files and tabs to specified files.\n     * @param {Object[]} execfiles Array of execution files.\n     * @param {String} execfiles.name File name.\n     * @param {?String} execfiles.contents File contents, null means inherit from VPL.\n     * @param {Boolean} keepContents Whether current contents should be kept, or overwritten.\n     * @param {String} fileTabs Tabs selector for execution files.\n     * @param {Editor} aceEditor Ace editor object.\n     * @param {jQuery} $hiddenField Hidden form field in which files data is stored.\n     */\n    function updateNewExecfiles(execfiles, keepContents, fileTabs, aceEditor, $hiddenField) {\n        // Empty exec files list.\n        var $fileTabs = $(fileTabs).html('');\n\n        // Create exec files object to store in hidden form element, and create file tabs.\n        var execfilesObj = {};\n        var initialContents = $hiddenField.val().length > 0 ? JSON.parse($hiddenField.val()) : {};\n        execfiles.forEach(function(execfile) {\n            var content = keepContents ? initialContents[execfile.name] : execfile.contents;\n            var status = (keepContents && content !== undefined) ? 'overwrite' : 'inherit';\n            var defaultContent = execfile.contents;\n            if (VPLService.isBinary(execfile.name)) {\n                // Binary files are not editable here.\n                status = 'inherit';\n                defaultContent = null;\n            }\n            if (status == 'overwrite') {\n                execfilesObj[execfile.name] = content;\n            }\n            $fileTabs.append('<li class=\"execfilename\">' +\n                                 '<span class=\"clickable rounded-top\">' +\n                                     execfile.name + getStatusChipHTML(status) +\n                                 '</span>' +\n                             '</li>');\n            $hiddenField.data('default_' + execfile.name, defaultContent);\n        });\n        $hiddenField.val(JSON.stringify(execfilesObj));\n\n        // Setup file tabs navigation.\n        $(fileTabs + ' .execfilename > span').click(function(event) {\n            if (!$(this).is('.currentfile')) {\n                updateExecfile($(fileTabs + ' .currentfile'), $(this), aceEditor, $hiddenField);\n            }\n            event.preventDefault();\n        });\n\n        aceEditor.on('change', function() {\n            if (programaticChangeEditor == aceEditor) {\n                // This event is fired by setValue, do not treat it as a user input.\n                return;\n            }\n            // When user types something, change status to \"overwrite\".\n            $fileTabs.siblings('[data-role=\"filemanagement\"]').find('input:radio[value=\"overwrite\"]').click();\n        });\n\n        // Initialize/re-initialize editor.\n        updateExecfile(null, $(fileTabs + ' .execfilename > span').first(), aceEditor, $hiddenField);\n    }\n\n    /**\n     * Store a file's content to hidden form element.\n     * @param {String} fileName File name.\n     * @param {String} fileContent File content.\n     * @param {jQuery} $hiddenField Hidden form field in which files data is stored.\n     */\n    function storeExecfile(fileName, fileContent, $hiddenField) {\n        var execfiles = JSON.parse($hiddenField.val());\n        if (fileContent === null) {\n            delete execfiles[fileName];\n        } else {\n            execfiles[fileName] = fileContent;\n        }\n        $hiddenField.val(JSON.stringify(execfiles));\n    }\n\n    /**\n     * Update Ace editor and tabs after user swapped to another file.\n     * @param {jQuery} $prevFile The previously selected tab.\n     * @param {jQuery} $newFile The new tab selected by the user.\n     * @param {Editor} aceEditor Ace editor object.\n     * @param {jQuery} $hiddenField Hidden form field in which files data is stored.\n     */\n    function updateExecfile($prevFile, $newFile, aceEditor, $hiddenField) {\n        if ($prevFile !== null) {\n            $prevFile.removeClass('currentfile');\n            var prevStatus = $prevFile.find('[data-status-chip]').data('status-chip');\n            storeExecfile($prevFile.text(), prevStatus == 'overwrite' ? aceEditor.getValue() : null, $hiddenField);\n        }\n        $newFile.addClass('currentfile');\n        var $fileManagement = $newFile.closest('ul').siblings('[data-role=\"filemanagement\"]');\n\n        // Update radio selection.\n        var newStatus = $newFile.find('[data-status-chip]').data('status-chip');\n        $fileManagement.find('input:radio[value=\"' + newStatus + '\"]').prop('checked', true);\n\n        var newFileName = $newFile.text();\n\n        if (VPLService.isBinary(newFileName)) {\n            // If binary file, replace editor with blank space (and display \"Binary file\").\n            $(aceEditor.container).addClass('invisible');\n            $('<pre class=\"visible bg-white text-center h-100 p-3 position-relative\" style=\"z-index:1\" data-role=\"binaryfile\">')\n            .text(M.util.get_string('binaryfile', 'mod_vpl'))\n            .appendTo($(aceEditor.container));\n            $fileManagement.find('input:radio[value=\"overwrite\"]').attr('disabled', 'disabled');\n        } else {\n            // Normal file, display editor.\n            $(aceEditor.container).find('[data-role=\"binaryfile\"]').remove();\n            $(aceEditor.container).removeClass('invisible');\n            $fileManagement.find('input:radio[value=\"overwrite\"]').removeAttr('disabled');\n\n            aceEditor.getSession().setMode('ace/mode/' + VPLService.langOfFile(newFileName));\n            var newFileContents = JSON.parse($hiddenField.val())[newFileName];\n            if (newFileContents === undefined) {\n                newFileContents = $hiddenField.data('default_' + newFileName);\n            }\n            updateEditorContent(aceEditor, newFileContents, true);\n        }\n    }\n\n    /**\n     * Setup behaviour for template VPL change, by displaying a dialog with Overwrite/Merge/Cancel options.\n     * The dialog will only show up if there is data to merge/overwrite.\n     * @param {String} helpButton HTML fragment for help button.\n     */\n    function setupTemplateChangeManager(helpButton) {\n        var $templateSelect = $('#id_templatevpl');\n        var templateChangeMessage = M.util.get_string('templatevplchangeprompt', 'qtype_vplquestion') + helpButton;\n        var $templateChangeDialog = $('<div class=\"py-3\">' + templateChangeMessage + '</div>').dialog({\n            autoOpen: false,\n            dialogClass: 'editformdialog p-3 bg-white',\n            title: M.util.get_string('templatevplchange', 'qtype_vplquestion'),\n            closeOnEscape: false,\n            modal: true,\n            buttons:\n            [{\n                text: M.util.get_string('overwrite', 'qtype_vplquestion'),\n                'class': 'btn btn-primary mx-1',\n                click: function() {\n                    // Apply the change without merging.\n                    $templateSelect.data('current', $templateSelect.val());\n                    $(this).dialog('close');\n                    applyTemplateChoice(false);\n                }\n            },\n            {\n                text: M.util.get_string('merge', 'qtype_vplquestion'),\n                'class': 'btn btn-primary mx-1',\n                click: function() {\n                    // Apply the change with merging.\n                    $templateSelect.data('current', $templateSelect.val());\n                    $(this).dialog('close');\n                    applyTemplateChoice(true);\n                }\n            },\n            {\n                text: M.util.get_string('cancel', 'moodle'),\n                'class': 'btn btn-secondary mx-1',\n                click: function() {\n                    // Undo select change.\n                    $templateSelect.val($templateSelect.data('current'));\n                    $(this).dialog('close');\n                }\n            }],\n            open: function() {\n                // By default, focus is on help button - make it less aggressive by focusing on the dialog.\n                $('.editformdialog').focus();\n            }\n        });\n        $templateSelect.focus(function() {\n            // Save the previous value to manage cancel.\n            $(this).data('current', $(this).val());\n        }).change(function() {\n            if ($templateSelect.val() && $('[name=execfiles]').val() != '') {\n                // There is data to merge/overwrite, open a dialog to prompt the user.\n                $templateChangeDialog.dialog('open');\n            } else {\n                // There is nothing to merge/overwrite, simply apply the change.\n                $templateSelect.data('current', $templateSelect.val());\n                applyTemplateChoice(false);\n            }\n        });\n    }\n\n    return {\n        setup: function(templateChangeHelpButton, vplVersion) {\n            // Setup all form editors.\n            CodeEditors.setupFormEditors()\n            .done(function() {\n                ScriptsLoader.loadVPLUtil(vplVersion, function() {\n                    execfilesEditor = ace.edit('ace_placeholder_execfile');\n                    precheckExecfilesEditor = ace.edit('ace_placeholder_precheckexecfile');\n                    setupExecfilesEditor('#execfileslist', execfilesEditor, $('[name=execfiles]'));\n                    setupExecfilesEditor('#precheckexecfileslist', precheckExecfilesEditor, $('[name=precheckexecfiles]'));\n                    // Setup form behavior (VPL template, execution files, etc).\n                    applyTemplateChoice(true);\n                    // Manage VPL template change.\n                    setupTemplateChangeManager(templateChangeHelpButton);\n                    $('#id_precheckpreference').change(updateExecfilesVisibility);\n                });\n            });\n        }\n    };\n});\n"],"names":["define","$","log","VPLService","CodeEditors","ScriptsLoader","execfilesEditor","precheckExecfilesEditor","programaticChangeEditor","updateEditorContent","aceEditor","newContent","clearUndoHistory","getSession","getDocument","setValue","setUndoManager","ace","UndoManager","updateExecfilesVisibility","selectedVpl","val","toggle","showPrecheckSection","showPrecheckEditor","length","edit","resize","hide","applyTemplateChoice","keepContents","call","then","reqfile","name","contents","lang","langOfFile","each","this","setMode","fail","message","error","execfiles","find","execfile","standardScripts","updateNewExecfiles","filter","includes","getStatusChipHTML","status","setupExecfilesEditor","fileTabs","$hiddenField","$fileTabs","parent","click","data","scrollLeft","Math","max","min","scrollLeftMax","$fileTab","storeExecfile","text","getValue","siblings","closest","append","newStatus","replaceWith","switchBackToDefaultFileMessage","M","util","get_string","$switchBackToDefaultFileDialog","dialog","autoOpen","dialogClass","title","closeOnEscape","modal","buttons","class","open","focus","trim","html","execfilesObj","initialContents","JSON","parse","forEach","content","undefined","defaultContent","isBinary","stringify","event","is","updateExecfile","preventDefault","on","first","fileName","fileContent","$prevFile","$newFile","removeClass","prevStatus","addClass","$fileManagement","prop","newFileName","container","appendTo","attr","remove","removeAttr","newFileContents","setup","templateChangeHelpButton","vplVersion","setupFormEditors","done","loadVPLUtil","helpButton","$templateSelect","templateChangeMessage","$templateChangeDialog","change"],"mappings":"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"}