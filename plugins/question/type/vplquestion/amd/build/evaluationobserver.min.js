/**
 * Module checking the state of an evaluation task and updating the question feedback when it has been evaluated.
 * @copyright  2024 Astor Bizard
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("qtype_vplquestion/evaluationobserver",["jquery","core/url","core/log"],(function($,url,log){return{init:function updateEvaluationState(divid,questiondata){$.ajax({url:url.relativeUrl("/question/type/vplquestion/ajax/checkevaluationstate.json.php"),data:questiondata}).then((function(outcome){if(!outcome.success)throw new Error(outcome.error);var $qdiv=$("#"+divid),response=outcome.response;return response.finished?($qdiv.find(".feedback, .im-feedback").remove(),$qdiv.find(".outcome").prepend(response.qfeedback+response.bfeedback),$qdiv.append(response.javascript),$qdiv.find(".outcome").html()==$qdiv.find(".outcome .accesshide")[0].outerHTML&&$qdiv.find(".outcome").remove(),$qdiv.find(".info .state").html(response.qinfo.state),$qdiv.find(".info .grade").html(response.qinfo.grade),$("#"+response.navbutton.id).attr("title",response.navbutton.title).removeClass(response.navbutton.oldclass).addClass(response.navbutton.newclass),$("table.quizreviewsummary th").each((function(){if($(this).text()==M.util.get_string("grade","quiz")&&0==$(this).next().find('[data-role="reload-page-message"]').length){var message=M.util.get_string("gradehaschangedreload","qtype_vplquestion",{aattr:'href="#" onclick="window.location.reload();return false;"'});$(this).next().append('<span data-role="reload-page-message"><i class="fa fa-info-circle ml-2 mr-1 text-info"></i>'+message+"</span>")}})),$qdiv.find(".history thead th").each((function(i){$(this).text()==M.util.get_string("state","question")?$qdiv.find(".history tbody tr.current td.c"+i).text(response.qinfo.state):$(this).text()==M.util.get_string("marks","question")&&$qdiv.find(".history tbody tr.current td.c"+i).text(response.qinfo.marks)}))):($qdiv.find('[data-qtype_vplquestion-role="async-eval-info"]').text(response.progressmessage),setTimeout((function(){updateEvaluationState(divid,questiondata)}),2e3)),outcome})).fail(log.error)}}}));

//# sourceMappingURL=evaluationobserver.min.js.map